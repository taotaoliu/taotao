{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/maupassant/source/css/donate.css","path":"css/donate.css","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/default.css","path":"css/default.css","modified":0,"renderable":1},{"_id":"themes/maupassant/source/donate/index.html","path":"donate/index.html","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/BTCQR.png","path":"img/BTCQR.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/alipay.svg","path":"img/alipay.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/WeChatQR.png","path":"img/WeChatQR.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/AliPayQR.png","path":"img/AliPayQR.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/bitcoin.svg","path":"img/bitcoin.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/github.svg","path":"img/github.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/paypal.svg","path":"img/paypal.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/like.svg","path":"img/like.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/donate.js","path":"js/donate.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/wechat.svg","path":"img/wechat.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/gitment.browser.js","path":"js/gitment.browser.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/maupassant/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1517302056000},{"_id":"source/.DS_Store","hash":"cb5b8f1c117769a1dc1c747f6dc702b4e6db4d55","modified":1517536955000},{"_id":"themes/maupassant/.DS_Store","hash":"61d4653525ee800306d888d998f91174144e6d64","modified":1517302623000},{"_id":"themes/maupassant/README.md","hash":"253b7eead5dac44c0cbc86dfc25aa352a56850c4","modified":1517302056000},{"_id":"themes/maupassant/LICENSE","hash":"f0ac2f92770650c9835183f79010c0d307b34acd","modified":1517302056000},{"_id":"themes/maupassant/_config.yml","hash":"3dfd6b5d8294b38b1d2a7b773f3c25ab778acecd","modified":1517541181000},{"_id":"themes/maupassant/package.json","hash":"f092433469eb87362e831326425a6a5c3c9fea0d","modified":1517302056000},{"_id":"source/_posts/Git-常用命令.md","hash":"50d6d26679821c74ca3f9d9153f7cf684aa6d885","modified":1517538347000},{"_id":"source/_posts/从-Block-和-Delegate-说起.md","hash":"c6d0c782574a4ddce33d0fdda25fee34e76c55d8","modified":1517568312000},{"_id":"source/_posts/.DS_Store","hash":"040b5bb16c5d1285de1eb8a897697ea4ac0ad57e","modified":1517568450000},{"_id":"source/_posts/SVN常用命令.md","hash":"0a8ed648f296e2caff2a6aeabc86d8b9ac954920","modified":1517538543000},{"_id":"source/_posts/iOS-调试技巧.md","hash":"7eab3d7da23549435612fe350e2ca07eb6a3ce50","modified":1517537466000},{"_id":"themes/maupassant/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1517302056000},{"_id":"themes/maupassant/.git/config","hash":"037345b11c41abb3dbbbd6e0242ced24979a7097","modified":1517302056000},{"_id":"themes/maupassant/.git/index","hash":"c484d7753f1ead076bdd78e96cbad740f9adb7db","modified":1517302056000},{"_id":"themes/maupassant/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1517302003000},{"_id":"themes/maupassant/.git/packed-refs","hash":"dbcbc2d229a08225c5440d0365a80b8e19b0902b","modified":1517302056000},{"_id":"themes/maupassant/layout/base-without-sidebar.pug","hash":"16c4d1079450f801b5ac079d3cc101856d8f387c","modified":1517302056000},{"_id":"themes/maupassant/layout/index.pug","hash":"ebe5495c3514e570af033728e664be4b1d4cd659","modified":1517302056000},{"_id":"themes/maupassant/layout/archive.pug","hash":"665582bb4092fcd81bfaf4d08fc1689abee1e6c4","modified":1517302056000},{"_id":"themes/maupassant/layout/base.pug","hash":"a4e32bcb580b76af9ad0582d9d3f0107e34509ed","modified":1517302056000},{"_id":"themes/maupassant/layout/page.pug","hash":"8cfd307b13cad8be34a1e75c4566f96c1722e08e","modified":1517302056000},{"_id":"themes/maupassant/layout/post.pug","hash":"137cdb71fa974eebd194c9d24bb822339b2ff5f3","modified":1517302056000},{"_id":"themes/maupassant/layout/timeline.pug","hash":"84fbfc92ccdf291b491140d89557553141a5d3f9","modified":1517302056000},{"_id":"themes/maupassant/layout/single-column.pug","hash":"0593f261dc208bb0b5c4232eb41eff597a291bd9","modified":1517302056000},{"_id":"source/about/index.md","hash":"24acacd5dfa4ceb8534f88c3ac6b79959b7391a8","modified":1517537862000},{"_id":"themes/maupassant/languages/en.yml","hash":"9dc51349f64e882433957c00dc757366229e0269","modified":1517302056000},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1517302056000},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1517302056000},{"_id":"themes/maupassant/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1517302056000},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"ffce5df2448a80dbad71da115c84b81f42a42778","modified":1517302056000},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1517302056000},{"_id":"themes/maupassant/languages/ru.yml","hash":"2476a631f4d3c668de04af85a6c2c97ba2a57e96","modified":1517302056000},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"bf3ab970f2ab3f29ddeb9f59bf98163be635e284","modified":1517302056000},{"_id":"themes/maupassant/source/.DS_Store","hash":"866e418b16b1ef97f4f081201d84735cfada0fc2","modified":1517303734000},{"_id":"source/_posts/iOS-调试技巧/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1517478379000},{"_id":"source/_posts/iOS-调试技巧/breakpoint1.png","hash":"a0506650a7562e9ff514b2549c416fee62486bb4","modified":1517478337000},{"_id":"source/_posts/iOS-调试技巧/breakpoint12.png","hash":"f85c679e23402f6e0b574a6efbfd6b6e235899de","modified":1517478520000},{"_id":"source/_posts/iOS-调试技巧/breakpoint13.png","hash":"e8a6a00b8789d9fe1f64f8493dc8b02bfdf0c364","modified":1517478565000},{"_id":"source/_posts/iOS-调试技巧/breakpoint16.png","hash":"62914b63188fb033af2e27a8bd7f3e287cef5bd1","modified":1517476621000},{"_id":"source/_posts/iOS-调试技巧/breakpoint15.png","hash":"38648981010ff460e3d161ea49ec391889da29e1","modified":1517476183000},{"_id":"source/_posts/iOS-调试技巧/breakpoint4.png","hash":"cc514934e78224ac5e290fc38504c886a62b99d7","modified":1517477675000},{"_id":"source/_posts/iOS-调试技巧/breakpoint5.png","hash":"2e6e00af53d5ea766a0b161e3ee826e20ffcc56a","modified":1517477711000},{"_id":"source/_posts/iOS-调试技巧/breakpoint8.png","hash":"3c226c35db2ffa9e22361fea4507cf68a4501d5b","modified":1517471188000},{"_id":"source/_posts/iOS-调试技巧/breakpoint9.png","hash":"a92019c371a73409511be25879f2fc4966f67223","modified":1517471245000},{"_id":"source/_posts/iOS-调试技巧/breakpoint7.png","hash":"ad9cc81432c0a6c706989cfe1d722c7ea92d5e09","modified":1517470884000},{"_id":"themes/maupassant/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1517302003000},{"_id":"themes/maupassant/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1517302003000},{"_id":"themes/maupassant/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1517302003000},{"_id":"themes/maupassant/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1517302003000},{"_id":"themes/maupassant/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1517302003000},{"_id":"themes/maupassant/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1517302003000},{"_id":"themes/maupassant/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1517302003000},{"_id":"themes/maupassant/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1517302003000},{"_id":"themes/maupassant/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1517302003000},{"_id":"themes/maupassant/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1517302003000},{"_id":"themes/maupassant/.git/logs/HEAD","hash":"e3e5e4cf7d3e3f685e4f2ae2a83a8d752259d39b","modified":1517302056000},{"_id":"themes/maupassant/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1517302003000},{"_id":"themes/maupassant/layout/_partial/after_footer.pug","hash":"532f540d1813bb7184b688cc22b292943c38fd0f","modified":1517302056000},{"_id":"themes/maupassant/layout/_partial/comments.pug","hash":"ae5537e123f7e95e2a423dce3147ef5f3d3114b6","modified":1517302056000},{"_id":"themes/maupassant/layout/_partial/footer.pug","hash":"650781b5bc8c632658ad6880ba663b1e3bfb5798","modified":1517302056000},{"_id":"themes/maupassant/layout/_partial/helpers.pug","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1517302056000},{"_id":"themes/maupassant/layout/_partial/head.pug","hash":"25d271612a40a9105bf47804cc979728ae57e1a9","modified":1517302056000},{"_id":"themes/maupassant/layout/_partial/paginator.pug","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1517302056000},{"_id":"themes/maupassant/layout/_partial/mathjax2.pug","hash":"0e2f902fd2f096ff9fcc84f4e60a8b2588962fe3","modified":1517302056000},{"_id":"themes/maupassant/layout/_partial/mathjax.pug","hash":"eb38a1b1bbde2556562edbab78c2f90fd7927e9d","modified":1517302056000},{"_id":"themes/maupassant/layout/_partial/post_nav.pug","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1517302056000},{"_id":"themes/maupassant/layout/_partial/totop.pug","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1517302056000},{"_id":"themes/maupassant/layout/_partial/tag.pug","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1517302056000},{"_id":"themes/maupassant/layout/_widget/category.pug","hash":"7c6aed762934ca51aa2669b886254da24b77bc14","modified":1517302056000},{"_id":"themes/maupassant/layout/_widget/links.pug","hash":"c45aa7ec00158579e58f1f8dfd890447bb5e5e54","modified":1517302056000},{"_id":"themes/maupassant/layout/_widget/search.pug","hash":"6e8e4123cca38840c4607c1a056205972b82bb7b","modified":1517302056000},{"_id":"themes/maupassant/layout/_widget/recent_posts.pug","hash":"19431336d724d2118e46da43683bce9063176541","modified":1517302056000},{"_id":"themes/maupassant/layout/_widget/recent_comments.pug","hash":"4102d446f13b02ff617f055c2a8f726bca12744a","modified":1517302056000},{"_id":"themes/maupassant/layout/_widget/tag.pug","hash":"132f049ce677d0e38f50073174c4ee4b825d4a06","modified":1517302056000},{"_id":"source/_posts/iOS-调试技巧/breakpoint11.png","hash":"4b067ab8a8015ebd92b29b384a0349f8468d7cf3","modified":1517471525000},{"_id":"source/_posts/iOS-调试技巧/breakpoint14.png","hash":"548cdcc7649683caf3800099903ce4525aa5169f","modified":1517475182000},{"_id":"themes/maupassant/source/css/donate.css","hash":"d0079ba8202d925a93ab1cb44f2087b81f476755","modified":1517302056000},{"_id":"themes/maupassant/source/css/default.css","hash":"7fbb18b73b44ed11193739c55fce53a6f173cf68","modified":1517302056000},{"_id":"source/_posts/iOS-调试技巧/breakpoint6.png","hash":"4263f434e8feb051932cf4e4afc1fef873309960","modified":1517477756000},{"_id":"themes/maupassant/source/donate/index.html","hash":"58260d8d8b5cfa3f46705914e6df164d9f08d9dd","modified":1517302056000},{"_id":"themes/maupassant/source/css/style.scss","hash":"fd8349ff25385b2dea1b3edc8e62275448a66bcd","modified":1517302056000},{"_id":"themes/maupassant/source/img/BTCQR.png","hash":"7d1c80f953bfb6f0a37d432b04c936ea165bfd97","modified":1517302056000},{"_id":"themes/maupassant/source/img/alipay.svg","hash":"46cc0552a9f6d700d618db3fcad25e1b8e697e36","modified":1517302056000},{"_id":"themes/maupassant/source/img/WeChatQR.png","hash":"8c41aca7883e5ff714c56556f5fff8e7e7c38093","modified":1517302056000},{"_id":"themes/maupassant/source/img/AliPayQR.png","hash":"7787b5d91cbf0e19a1260df24f7d949771c7d45b","modified":1517302056000},{"_id":"themes/maupassant/source/img/bitcoin.svg","hash":"635f7cca5e675d192be2717788175c7a2146013a","modified":1517302056000},{"_id":"themes/maupassant/source/img/github.svg","hash":"90ba9a3b0dc19e70e742a39b014194f801e00f97","modified":1517302056000},{"_id":"themes/maupassant/source/img/paypal.svg","hash":"92f3bc495f20a0190d3041be03345c46d6238c25","modified":1517302056000},{"_id":"themes/maupassant/source/img/like.svg","hash":"22a2754dc454d7b0321b70914fb2936b8d2ea8ab","modified":1517302056000},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1517302056000},{"_id":"themes/maupassant/source/js/donate.js","hash":"780beaaf44b1e6c057752bdbc085b1048937e5e7","modified":1517302056000},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1517302056000},{"_id":"themes/maupassant/source/img/wechat.svg","hash":"330496ad42446a29f37a2b97fc388ebd77a8cb9f","modified":1517302056000},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1517302056000},{"_id":"themes/maupassant/source/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1517302056000},{"_id":"themes/maupassant/source/js/share.js","hash":"a2f9de374523dc7f2ddb90ed5f24b668c20d9272","modified":1517302056000},{"_id":"themes/maupassant/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1517302056000},{"_id":"themes/maupassant/.git/refs/heads/master","hash":"5a0e3634d9759fd56d798b58ece1cf4c9f6463c7","modified":1517302056000},{"_id":"themes/maupassant/.git/objects/pack/pack-be690f80f9ad109f10f1e10a7a1cd22d6ceb7e82.idx","hash":"6b7133921f87d7ef04ce1702dc6e4b65621ba53a","modified":1517302056000},{"_id":"themes/maupassant/source/js/gitment.browser.js","hash":"376446d9c5930576016f97dd63e5e6616c94d8d4","modified":1517302056000},{"_id":"themes/maupassant/.git/logs/refs/heads/master","hash":"e3e5e4cf7d3e3f685e4f2ae2a83a8d752259d39b","modified":1517302056000},{"_id":"themes/maupassant/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1517302056000},{"_id":"themes/maupassant/.git/logs/refs/remotes/origin/HEAD","hash":"e3e5e4cf7d3e3f685e4f2ae2a83a8d752259d39b","modified":1517302056000},{"_id":"themes/maupassant/.git/objects/pack/pack-be690f80f9ad109f10f1e10a7a1cd22d6ceb7e82.pack","hash":"5bd3daa836e129b192da5ca94c7ae90145c37ed6","modified":1517302056000},{"_id":"public/archives/index.html","hash":"de95aa173986b459bcd7d16a234d53f9b9c24088","modified":1517569341566},{"_id":"public/2018/02/01/iOS-调试技巧/index.html","hash":"13c50b0118446094ffa09fb62a6cac235522a71a","modified":1517569341566},{"_id":"public/archives/2018/index.html","hash":"de95aa173986b459bcd7d16a234d53f9b9c24088","modified":1517569341571},{"_id":"public/archives/2018/02/index.html","hash":"de95aa173986b459bcd7d16a234d53f9b9c24088","modified":1517569341571},{"_id":"public/index.html","hash":"a88bd864c61837e0abe3935cf7ebb3d705aa8fb5","modified":1517569341571},{"_id":"public/2018/02/02/Git-常用命令/index.html","hash":"e8f0e3ab339fa5dc2a5acc0400cef46ab4ced4a6","modified":1517569341566},{"_id":"public/about/index.html","hash":"fff0576a74cb3f05671223c9fb933e585e28be84","modified":1517569341566},{"_id":"public/2018/02/01/SVN常用命令/index.html","hash":"26bcb5a51ce88375e225f1c9530bb8e683e14f17","modified":1517569341571},{"_id":"public/2018/02/02/从-Block-和-Delegate-说起/index.html","hash":"ae43876321422da302e2b1069bc9e9a3bf29624b","modified":1517568321147},{"_id":"public/img/alipay.svg","hash":"46cc0552a9f6d700d618db3fcad25e1b8e697e36","modified":1517568321147},{"_id":"public/img/WeChatQR.png","hash":"8c41aca7883e5ff714c56556f5fff8e7e7c38093","modified":1517568321147},{"_id":"public/img/bitcoin.svg","hash":"635f7cca5e675d192be2717788175c7a2146013a","modified":1517568321147},{"_id":"public/img/AliPayQR.png","hash":"7787b5d91cbf0e19a1260df24f7d949771c7d45b","modified":1517568321147},{"_id":"public/img/github.svg","hash":"90ba9a3b0dc19e70e742a39b014194f801e00f97","modified":1517568321147},{"_id":"public/img/paypal.svg","hash":"92f3bc495f20a0190d3041be03345c46d6238c25","modified":1517568321148},{"_id":"public/img/like.svg","hash":"22a2754dc454d7b0321b70914fb2936b8d2ea8ab","modified":1517568321148},{"_id":"public/img/BTCQR.png","hash":"7d1c80f953bfb6f0a37d432b04c936ea165bfd97","modified":1517568321148},{"_id":"public/img/wechat.svg","hash":"330496ad42446a29f37a2b97fc388ebd77a8cb9f","modified":1517568321148},{"_id":"public/2018/02/01/iOS-调试技巧/breakpoint1.png","hash":"a0506650a7562e9ff514b2549c416fee62486bb4","modified":1517568321172},{"_id":"public/2018/02/01/iOS-调试技巧/breakpoint12.png","hash":"f85c679e23402f6e0b574a6efbfd6b6e235899de","modified":1517568321173},{"_id":"public/2018/02/01/iOS-调试技巧/breakpoint15.png","hash":"38648981010ff460e3d161ea49ec391889da29e1","modified":1517568321173},{"_id":"public/2018/02/01/iOS-调试技巧/breakpoint16.png","hash":"62914b63188fb033af2e27a8bd7f3e287cef5bd1","modified":1517568321173},{"_id":"public/2018/02/01/iOS-调试技巧/breakpoint13.png","hash":"e8a6a00b8789d9fe1f64f8493dc8b02bfdf0c364","modified":1517568321174},{"_id":"public/2018/02/01/iOS-调试技巧/breakpoint5.png","hash":"2e6e00af53d5ea766a0b161e3ee826e20ffcc56a","modified":1517568321174},{"_id":"public/2018/02/01/iOS-调试技巧/breakpoint4.png","hash":"cc514934e78224ac5e290fc38504c886a62b99d7","modified":1517568321174},{"_id":"public/2018/02/01/iOS-调试技巧/breakpoint7.png","hash":"ad9cc81432c0a6c706989cfe1d722c7ea92d5e09","modified":1517568321174},{"_id":"public/2018/02/01/iOS-调试技巧/breakpoint8.png","hash":"3c226c35db2ffa9e22361fea4507cf68a4501d5b","modified":1517568321174},{"_id":"public/2018/02/01/iOS-调试技巧/breakpoint9.png","hash":"a92019c371a73409511be25879f2fc4966f67223","modified":1517568321174},{"_id":"public/2018/02/01/iOS-调试技巧/breakpoint11.png","hash":"4b067ab8a8015ebd92b29b384a0349f8468d7cf3","modified":1517568321174},{"_id":"public/2018/02/01/iOS-调试技巧/breakpoint14.png","hash":"548cdcc7649683caf3800099903ce4525aa5169f","modified":1517568321174},{"_id":"public/donate/index.html","hash":"58260d8d8b5cfa3f46705914e6df164d9f08d9dd","modified":1517568321176},{"_id":"public/css/donate.css","hash":"d0079ba8202d925a93ab1cb44f2087b81f476755","modified":1517568321176},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1517568321176},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1517568321176},{"_id":"public/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1517568321176},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1517568321176},{"_id":"public/js/donate.js","hash":"89f0b9d9d0c4fce183161d29c2a44aef750efb27","modified":1517568321176},{"_id":"public/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1517568321176},{"_id":"public/js/share.js","hash":"a2f9de374523dc7f2ddb90ed5f24b668c20d9272","modified":1517568321176},{"_id":"public/css/default.css","hash":"7fbb18b73b44ed11193739c55fce53a6f173cf68","modified":1517568321176},{"_id":"public/css/style.css","hash":"ab15539e091aae43411dcdaeec6d990d58e362f2","modified":1517568321176},{"_id":"public/js/gitment.browser.js","hash":"376446d9c5930576016f97dd63e5e6616c94d8d4","modified":1517568321176},{"_id":"public/2018/02/01/iOS-调试技巧/breakpoint6.png","hash":"4263f434e8feb051932cf4e4afc1fef873309960","modified":1517568321176}],"Category":[],"Data":[],"Page":[{"title":"","date":"2018-01-30T09:10:00.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: \ndate: 2018-01-30 17:10:00\n---\n","updated":"2018-02-02T02:17:42.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjd5szu4f0001mcl0x1k5hwuc","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Git-常用命令","date":"2018-02-02T02:25:47.000Z","_content":"","source":"_posts/Git-常用命令.md","raw":"---\ntitle: Git-常用命令\ndate: 2018-02-02 10:25:47\ntags:\n---\n","slug":"Git-常用命令","published":1,"updated":"2018-02-02T02:25:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd5szu4c0000mcl016jfw7ts","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"SVN-常用命令","date":"2018-02-01T10:13:48.000Z","_content":"1. 检出: checkout 缩写 co\n如果不带 --password  参数传输密码的话，会提示输入密码，建议不要用明文的 --password 选项。其中 username 与 password前是两个短线，不是一个。默认check到当前目录。\n\n    ```\n    svn  checkout  http://路径(目录或文件的全路径)　[本地目录全路径] --username　用户名\n    svn  checkout  svn://路径(目录或文件的全路径)　 [本地目录全路径] --username　用户名\n\n    例子：\n    svn co svn://localhost/files          --username taotao\n    svn checkout http://localhost/files   --username taotao\n    ```\n\n2. 导出(导出一个干净的不带.svn文件夹的目录树)\n\n    ```\n    svn  export  [-r 版本号]  http://路径(目录或文件的全路径) [本地目录全路径]\n    --username　用户名\n    svn  export  [-r 版本号]  svn://路径(目录或文件的全路径) [本地目录全路径] --username　用户名\n    svn  export  本地检出的(即带有.svn文件夹的)目录全路径  要导出的本地目录全路径\n\n    例子：\n    svn export svn://localhost/files --username wzhnsc\n    svn export svn://localhost/files --username wzhnsc\n    svn export /home/files /home/tofiles\n    ```\n\n3. 添加新文件: add\n\n    ```\n    svn　add　文件名\n\n    例子：\n    svn add picture.png\n    ```\n\n4. 提交: commit 缩写 ci\n\n    ```\n    svn　commit　-m　“提交备注信息文本“　[-N]　[--no-unlock]　文件名\n    svn　ci　-m　“提交备注信息文本“　    [-N]　[--no-unlock]　文件名\n\n    例子：\n    svn commit -m “提交我的测试用test.swift“ test.swift\n    svn ci -m “提交我的测试用test.swift“ test.swift\n    ```\n\n5. 更新文件: update\n\n    ```\n    svn　update\n    svn　update　-r　修正版本　文件名\n    svn　update　文件名\n\n    例子：\n    svn update      \n\n    后面没有目录，默认将当前目录以及子目录下的所有文件都更新到最新版本\n\n    svn update -r 200 test.swift    \n\n    将版本库中的文件 test.swift还原到修正版本（revision）200\n\n    svn update test.swift\n\n    更新与版本库同步。提交的时候提示过期冲突，需要先update修改文件，然后清除\n    svn resolved，最后再提交commit。\n    ```\n\n6. 删除文件: delete\n\n    ```\n    svn　delete　svn://路径(目录或文件的全路径) -m “删除备注信息文本”\n    svn　delete　文件名 \n\n    例子：\n    svn delete svn://localhost/testapp/test.swift -m “删除测试文件test.swift”\n\n    推荐如下操作：\n    svn delete test.swift \n    ```\n\n7. 加锁: lock\n\n    ```\n    svn　lock　-m　“加锁备注信息文本“　[--force]　文件名 \n    svn　unlock　文件名\n\n    例子：\n    svn lock -m “锁信测试用test.swift文件“ test.swift \n    svn unlock test.swift\n    ```\n\n8. 比较差异: diff\n\n    ```\n    svn　diff　     文件名 \n    svn　diff　-r　 修正版本号m:修正版本号n　文件名\n\n    例子：\n    svn diff test.swift               \n\n    将修改的文件与基础版本比较\n\n    svn diff -r 200:201 test.swift   \n\n    对修正版本号200和修正版本号201比较差异\n    ```\n\n9. 查看文件或者目录状态: status  缩写 st\n\n    ```\n    svn st 目录路径/名\n\n    目录下的文件和子目录的状态，正常状态不显示 ?：不在svn的控制中M：内容被修改；C：发生冲突A：预定加入到版本库 K：被锁定 \n\n    svn  -v 目录路径/名\n\n    svn status -v 目录路径/名\n\n    显示文件和子目录状态,第一列保持相同，第二列显示工作版本号，第三和第四列显示最后一次修改的版本号和修改人\n    ```\n\n10. 查看日志: log\n\n    ```\n    svn　log　文件名\n\n    例子：\n    svn log test.swift    \n\n    显示这个文件的所有修改记录，及其版本号的变化\n    ```\n\n11. 查看文件详细信息: info\n\n    ```\n    svn　info　文件名\n\n    例子：\n    svn info test.swift\n    ```\n\n12. 查看版本库下的文件和目录列表: list 缩写 ls\n\n    ```\n    svn　list　svn://路径(目录或文件的全路径)\n    svn　ls　svn://路径(目录或文件的全路径)\n\n    例子：\n    svn list svn://localhost/test\n    svn ls svn://localhost/test   \n\n    显示svn://localhost/test目录下的所有属于版本库的文件和目录 \n    ```\n\n13. 恢复本地修改: revert\n\n    ```\n    svn　revert　[--recursive]　文件名\n\n    注意: 本子命令不会存取网络，并且会解除冲突的状况。但是它不会恢复被删除的目录。\n\n    例子：\n    svn revert taotao.swift      \n\n    丢弃对一个文件的修改\n\n    svn revert --recursive .     \n\n    恢复一整个目录的文件，. 为当前目录 \n    ```\n\n14. 把工作拷贝更新到别的URL: switch\n\n    ```\n    svn　switch　http://目录全路径　  \n\n    本地目录全路径\n\n    例子：\n    svn switch http://localhost/test/456 .  \n\n    (原为123的分支)当前所在目录分支到\n    ```\n\n15. 新建分支: copy\n    ```\n    svn copy\n\n    例子：\n    svn copy branchA branchB  -m \"make B branch\"    从branchA拷贝出一个新分支branchB\n    ```\n\n16. 合并分支: merge\n    ```\n\n    例子：\n    svn merge branchA branchB  \n\n    把对branchA的修改合并到分支branchB\n    ```\n\n17. 解决冲突：resolved\n\n    ```\n    svn　resolved　[本地目录全路径]\n\n    例子：\n    $ svn update\n    C foo.c\n    Updated to revision 31.\n    如果你在更新时得到冲突，你的工作拷贝会产生三个新的文件：\n\n    $ ls\n    foo.c\n    foo.c.mine\n    foo.c.r30\n    foo.c.r31\n    当你解决了foo.c的冲突，并且准备提交，\n    运行svn resolved让你的工作拷贝知道你已经完成了所有事情。\n    你可以仅仅删除冲突的文件并且提交，\n    但是svn resolved除了删除冲突文件，还修正了一些记录在工作拷贝管理区域的记录数据。\n    ```\n","source":"_posts/SVN常用命令.md","raw":"---\ntitle: SVN-常用命令\ndate: 2018-02-01 18:13:48\ntags:\n---\n1. 检出: checkout 缩写 co\n如果不带 --password  参数传输密码的话，会提示输入密码，建议不要用明文的 --password 选项。其中 username 与 password前是两个短线，不是一个。默认check到当前目录。\n\n    ```\n    svn  checkout  http://路径(目录或文件的全路径)　[本地目录全路径] --username　用户名\n    svn  checkout  svn://路径(目录或文件的全路径)　 [本地目录全路径] --username　用户名\n\n    例子：\n    svn co svn://localhost/files          --username taotao\n    svn checkout http://localhost/files   --username taotao\n    ```\n\n2. 导出(导出一个干净的不带.svn文件夹的目录树)\n\n    ```\n    svn  export  [-r 版本号]  http://路径(目录或文件的全路径) [本地目录全路径]\n    --username　用户名\n    svn  export  [-r 版本号]  svn://路径(目录或文件的全路径) [本地目录全路径] --username　用户名\n    svn  export  本地检出的(即带有.svn文件夹的)目录全路径  要导出的本地目录全路径\n\n    例子：\n    svn export svn://localhost/files --username wzhnsc\n    svn export svn://localhost/files --username wzhnsc\n    svn export /home/files /home/tofiles\n    ```\n\n3. 添加新文件: add\n\n    ```\n    svn　add　文件名\n\n    例子：\n    svn add picture.png\n    ```\n\n4. 提交: commit 缩写 ci\n\n    ```\n    svn　commit　-m　“提交备注信息文本“　[-N]　[--no-unlock]　文件名\n    svn　ci　-m　“提交备注信息文本“　    [-N]　[--no-unlock]　文件名\n\n    例子：\n    svn commit -m “提交我的测试用test.swift“ test.swift\n    svn ci -m “提交我的测试用test.swift“ test.swift\n    ```\n\n5. 更新文件: update\n\n    ```\n    svn　update\n    svn　update　-r　修正版本　文件名\n    svn　update　文件名\n\n    例子：\n    svn update      \n\n    后面没有目录，默认将当前目录以及子目录下的所有文件都更新到最新版本\n\n    svn update -r 200 test.swift    \n\n    将版本库中的文件 test.swift还原到修正版本（revision）200\n\n    svn update test.swift\n\n    更新与版本库同步。提交的时候提示过期冲突，需要先update修改文件，然后清除\n    svn resolved，最后再提交commit。\n    ```\n\n6. 删除文件: delete\n\n    ```\n    svn　delete　svn://路径(目录或文件的全路径) -m “删除备注信息文本”\n    svn　delete　文件名 \n\n    例子：\n    svn delete svn://localhost/testapp/test.swift -m “删除测试文件test.swift”\n\n    推荐如下操作：\n    svn delete test.swift \n    ```\n\n7. 加锁: lock\n\n    ```\n    svn　lock　-m　“加锁备注信息文本“　[--force]　文件名 \n    svn　unlock　文件名\n\n    例子：\n    svn lock -m “锁信测试用test.swift文件“ test.swift \n    svn unlock test.swift\n    ```\n\n8. 比较差异: diff\n\n    ```\n    svn　diff　     文件名 \n    svn　diff　-r　 修正版本号m:修正版本号n　文件名\n\n    例子：\n    svn diff test.swift               \n\n    将修改的文件与基础版本比较\n\n    svn diff -r 200:201 test.swift   \n\n    对修正版本号200和修正版本号201比较差异\n    ```\n\n9. 查看文件或者目录状态: status  缩写 st\n\n    ```\n    svn st 目录路径/名\n\n    目录下的文件和子目录的状态，正常状态不显示 ?：不在svn的控制中M：内容被修改；C：发生冲突A：预定加入到版本库 K：被锁定 \n\n    svn  -v 目录路径/名\n\n    svn status -v 目录路径/名\n\n    显示文件和子目录状态,第一列保持相同，第二列显示工作版本号，第三和第四列显示最后一次修改的版本号和修改人\n    ```\n\n10. 查看日志: log\n\n    ```\n    svn　log　文件名\n\n    例子：\n    svn log test.swift    \n\n    显示这个文件的所有修改记录，及其版本号的变化\n    ```\n\n11. 查看文件详细信息: info\n\n    ```\n    svn　info　文件名\n\n    例子：\n    svn info test.swift\n    ```\n\n12. 查看版本库下的文件和目录列表: list 缩写 ls\n\n    ```\n    svn　list　svn://路径(目录或文件的全路径)\n    svn　ls　svn://路径(目录或文件的全路径)\n\n    例子：\n    svn list svn://localhost/test\n    svn ls svn://localhost/test   \n\n    显示svn://localhost/test目录下的所有属于版本库的文件和目录 \n    ```\n\n13. 恢复本地修改: revert\n\n    ```\n    svn　revert　[--recursive]　文件名\n\n    注意: 本子命令不会存取网络，并且会解除冲突的状况。但是它不会恢复被删除的目录。\n\n    例子：\n    svn revert taotao.swift      \n\n    丢弃对一个文件的修改\n\n    svn revert --recursive .     \n\n    恢复一整个目录的文件，. 为当前目录 \n    ```\n\n14. 把工作拷贝更新到别的URL: switch\n\n    ```\n    svn　switch　http://目录全路径　  \n\n    本地目录全路径\n\n    例子：\n    svn switch http://localhost/test/456 .  \n\n    (原为123的分支)当前所在目录分支到\n    ```\n\n15. 新建分支: copy\n    ```\n    svn copy\n\n    例子：\n    svn copy branchA branchB  -m \"make B branch\"    从branchA拷贝出一个新分支branchB\n    ```\n\n16. 合并分支: merge\n    ```\n\n    例子：\n    svn merge branchA branchB  \n\n    把对branchA的修改合并到分支branchB\n    ```\n\n17. 解决冲突：resolved\n\n    ```\n    svn　resolved　[本地目录全路径]\n\n    例子：\n    $ svn update\n    C foo.c\n    Updated to revision 31.\n    如果你在更新时得到冲突，你的工作拷贝会产生三个新的文件：\n\n    $ ls\n    foo.c\n    foo.c.mine\n    foo.c.r30\n    foo.c.r31\n    当你解决了foo.c的冲突，并且准备提交，\n    运行svn resolved让你的工作拷贝知道你已经完成了所有事情。\n    你可以仅仅删除冲突的文件并且提交，\n    但是svn resolved除了删除冲突文件，还修正了一些记录在工作拷贝管理区域的记录数据。\n    ```\n","slug":"SVN常用命令","published":1,"updated":"2018-02-02T02:29:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd5szu4g0002mcl0t7k2jfjf","content":"<ol>\n<li><p>检出: checkout 缩写 co<br>如果不带 –password  参数传输密码的话，会提示输入密码，建议不要用明文的 –password 选项。其中 username 与 password前是两个短线，不是一个。默认check到当前目录。</p>\n <figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn  checkout  <span class=\"string\">http:</span><span class=\"comment\">//路径(目录或文件的全路径)　[本地目录全路径] --username　用户名</span></span><br><span class=\"line\">svn  checkout  <span class=\"string\">svn:</span><span class=\"comment\">//路径(目录或文件的全路径)　 [本地目录全路径] --username　用户名</span></span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn co <span class=\"string\">svn:</span><span class=\"comment\">//localhost/files          --username taotao</span></span><br><span class=\"line\">svn checkout <span class=\"string\">http:</span><span class=\"comment\">//localhost/files   --username taotao</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>导出(导出一个干净的不带.svn文件夹的目录树)</p>\n <figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn  <span class=\"keyword\">export</span>  [-r 版本号]  http:<span class=\"comment\">//路径(目录或文件的全路径) [本地目录全路径]</span></span><br><span class=\"line\">--username　用户名</span><br><span class=\"line\">svn  <span class=\"keyword\">export</span>  [-r 版本号]  svn:<span class=\"comment\">//路径(目录或文件的全路径) [本地目录全路径] --username　用户名</span></span><br><span class=\"line\">svn  <span class=\"keyword\">export</span>  本地检出的(即带有.svn文件夹的)目录全路径  要导出的本地目录全路径</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"keyword\">export</span> svn:<span class=\"comment\">//localhost/files --username wzhnsc</span></span><br><span class=\"line\">svn <span class=\"keyword\">export</span> svn:<span class=\"comment\">//localhost/files --username wzhnsc</span></span><br><span class=\"line\">svn <span class=\"keyword\">export</span> /<span class=\"built_in\">home</span>/files /<span class=\"built_in\">home</span>/tofiles</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加新文件: add</p>\n <figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"keyword\">add</span><span class=\"bash\">　文件名</span></span><br><span class=\"line\"><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"bash\">例子：</span></span><br><span class=\"line\"><span class=\"bash\">svn add picture.png</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>提交: commit 缩写 ci</p>\n <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">svn</span>　<span class=\"selector-tag\">commit</span>　<span class=\"selector-tag\">-m</span>　“提交备注信息文本“　<span class=\"selector-attr\">[-N]</span>　<span class=\"selector-attr\">[--no-unlock]</span>　文件名</span><br><span class=\"line\"><span class=\"selector-tag\">svn</span>　<span class=\"selector-tag\">ci</span>　<span class=\"selector-tag\">-m</span>　“提交备注信息文本“　    <span class=\"selector-attr\">[-N]</span>　<span class=\"selector-attr\">[--no-unlock]</span>　文件名</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\"><span class=\"selector-tag\">svn</span> <span class=\"selector-tag\">commit</span> <span class=\"selector-tag\">-m</span> “提交我的测试用<span class=\"selector-tag\">test</span><span class=\"selector-class\">.swift</span>“ <span class=\"selector-tag\">test</span><span class=\"selector-class\">.swift</span></span><br><span class=\"line\"><span class=\"selector-tag\">svn</span> <span class=\"selector-tag\">ci</span> <span class=\"selector-tag\">-m</span> “提交我的测试用<span class=\"selector-tag\">test</span><span class=\"selector-class\">.swift</span>“ <span class=\"selector-tag\">test</span><span class=\"selector-class\">.swift</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更新文件: update</p>\n <figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"keyword\">update</span></span><br><span class=\"line\">svn　<span class=\"keyword\">update</span>　-r　修正版本　文件名</span><br><span class=\"line\">svn　<span class=\"keyword\">update</span>　文件名</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"keyword\">update</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">后面没有目录，默认将当前目录以及子目录下的所有文件都更新到最新版本</span><br><span class=\"line\"></span><br><span class=\"line\">svn <span class=\"keyword\">update</span> -r 200 <span class=\"keyword\">test</span>.swift    </span><br><span class=\"line\"></span><br><span class=\"line\">将版本库中的文件 <span class=\"keyword\">test</span>.swift还原到修正版本（revision）200</span><br><span class=\"line\"></span><br><span class=\"line\">svn <span class=\"keyword\">update</span> <span class=\"keyword\">test</span>.swift</span><br><span class=\"line\"></span><br><span class=\"line\">更新与版本库同步。提交的时候提示过期冲突，需要先<span class=\"keyword\">update</span>修改文件，然后清除</span><br><span class=\"line\">svn resolved，最后再提交commit。</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除文件: delete</p>\n <figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"keyword\">delete</span>　svn:<span class=\"regexp\">//</span>路径(目录或文件的全路径) -m “删除备注信息文本”</span><br><span class=\"line\">svn　<span class=\"keyword\">delete</span>　文件名 </span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"keyword\">delete</span> svn:<span class=\"regexp\">//</span>localhost<span class=\"regexp\">/testapp/</span>test.swift -m “删除测试文件test.swift”</span><br><span class=\"line\"></span><br><span class=\"line\">推荐如下操作：</span><br><span class=\"line\">svn <span class=\"keyword\">delete</span> test.swift</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>加锁: lock</p>\n <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"keyword\">lock</span>　-m　“加锁备注信息文本“　[<span class=\"comment\">--force]　文件名 </span></span><br><span class=\"line\">svn　<span class=\"keyword\">unlock</span>　文件名</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"keyword\">lock</span> -m “锁信测试用test.swift文件“ test.swift </span><br><span class=\"line\">svn <span class=\"keyword\">unlock</span> test.swift</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>比较差异: diff</p>\n <figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"keyword\">diff　</span>     文件名 </span><br><span class=\"line\">svn　<span class=\"keyword\">diff　</span>-r　 修正版本号m:修正版本号n　文件名</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"keyword\">diff </span>test.<span class=\"keyword\">swift </span>              </span><br><span class=\"line\"></span><br><span class=\"line\">将修改的文件与基础版本比较</span><br><span class=\"line\"></span><br><span class=\"line\">svn <span class=\"keyword\">diff </span>-r <span class=\"number\">200</span>:<span class=\"number\">201</span> test.<span class=\"keyword\">swift </span>  </span><br><span class=\"line\"></span><br><span class=\"line\">对修正版本号<span class=\"number\">200</span>和修正版本号<span class=\"number\">201</span>比较差异</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看文件或者目录状态: status  缩写 st</p>\n <figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn st 目录路径/名</span><br><span class=\"line\"></span><br><span class=\"line\">目录下的文件和子目录的状态，正常状态不显示 ?：不在svn的控制中M：内容被修改；<span class=\"keyword\">C</span>：发生冲突A：预定加入到版本库 <span class=\"keyword\">K</span>：被锁定 </span><br><span class=\"line\"></span><br><span class=\"line\">svn  -v 目录路径/名</span><br><span class=\"line\"></span><br><span class=\"line\">svn status -v 目录路径/名</span><br><span class=\"line\"></span><br><span class=\"line\">显示文件和子目录状态,第一列保持相同，第二列显示工作版本号，第三和第四列显示最后一次修改的版本号和修改人</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看日志: log</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"keyword\">log</span>　文件名</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"keyword\">log</span> <span class=\"keyword\">test</span>.swift    </span><br><span class=\"line\"></span><br><span class=\"line\">显示这个文件的所有修改记录，及其版本号的变化</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看文件详细信息: info</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"builtin-name\">info</span>　文件名</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"builtin-name\">info</span> test.swift</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看版本库下的文件和目录列表: list 缩写 ls</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　list　<span class=\"string\">svn:</span><span class=\"comment\">//路径(目录或文件的全路径)</span></span><br><span class=\"line\">svn　ls　<span class=\"string\">svn:</span><span class=\"comment\">//路径(目录或文件的全路径)</span></span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn list <span class=\"string\">svn:</span><span class=\"comment\">//localhost/test</span></span><br><span class=\"line\">svn ls <span class=\"string\">svn:</span><span class=\"comment\">//localhost/test   </span></span><br><span class=\"line\"></span><br><span class=\"line\">显示<span class=\"string\">svn:</span><span class=\"comment\">//localhost/test目录下的所有属于版本库的文件和目录</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>恢复本地修改: revert</p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">svn</span>　<span class=\"keyword\">revert　</span>[--recursive]　文件名</span><br><span class=\"line\"></span><br><span class=\"line\">注意: 本子命令不会存取网络，并且会解除冲突的状况。但是它不会恢复被删除的目录。</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\"><span class=\"symbol\">svn</span> <span class=\"keyword\">revert </span>taotao.<span class=\"keyword\">swift </span>     </span><br><span class=\"line\"></span><br><span class=\"line\">丢弃对一个文件的修改</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">svn</span> <span class=\"keyword\">revert </span>--recursive .     </span><br><span class=\"line\"></span><br><span class=\"line\">恢复一整个目录的文件，. 为当前目录</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>把工作拷贝更新到别的URL: switch</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"keyword\">switch</span>　<span class=\"string\">http:</span><span class=\"comment\">//目录全路径　  </span></span><br><span class=\"line\"></span><br><span class=\"line\">本地目录全路径</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"keyword\">switch</span> <span class=\"string\">http:</span><span class=\"comment\">//localhost/test/456 .  </span></span><br><span class=\"line\"></span><br><span class=\"line\">(原为<span class=\"number\">123</span>的分支)当前所在目录分支到</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>新建分支: copy</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn <span class=\"keyword\">copy</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"bash\">例子：</span></span><br><span class=\"line\"><span class=\"bash\">svn copy branchA branchB  -m <span class=\"string\">\"make B branch\"</span>    从branchA拷贝出一个新分支branchB</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>合并分支: merge</p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\"><span class=\"symbol\">svn</span> merge <span class=\"keyword\">branchA </span><span class=\"keyword\">branchB </span> </span><br><span class=\"line\"></span><br><span class=\"line\">把对<span class=\"keyword\">branchA的修改合并到分支branchB</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解决冲突：resolved</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　resolved　[本地目录全路径]</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">$ svn update</span><br><span class=\"line\">C foo.c</span><br><span class=\"line\">Updated to revision <span class=\"number\">31</span>.</span><br><span class=\"line\">如果你在更新时得到冲突，你的工作拷贝会产生三个新的文件：</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls</span><br><span class=\"line\">foo.c</span><br><span class=\"line\">foo<span class=\"selector-class\">.c</span><span class=\"selector-class\">.mine</span></span><br><span class=\"line\">foo<span class=\"selector-class\">.c</span><span class=\"selector-class\">.r30</span></span><br><span class=\"line\">foo<span class=\"selector-class\">.c</span><span class=\"selector-class\">.r31</span></span><br><span class=\"line\">当你解决了foo.c的冲突，并且准备提交，</span><br><span class=\"line\">运行svn resolved让你的工作拷贝知道你已经完成了所有事情。</span><br><span class=\"line\">你可以仅仅删除冲突的文件并且提交，</span><br><span class=\"line\">但是svn resolved除了删除冲突文件，还修正了一些记录在工作拷贝管理区域的记录数据。</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>检出: checkout 缩写 co<br>如果不带 –password  参数传输密码的话，会提示输入密码，建议不要用明文的 –password 选项。其中 username 与 password前是两个短线，不是一个。默认check到当前目录。</p>\n <figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn  checkout  <span class=\"string\">http:</span><span class=\"comment\">//路径(目录或文件的全路径)　[本地目录全路径] --username　用户名</span></span><br><span class=\"line\">svn  checkout  <span class=\"string\">svn:</span><span class=\"comment\">//路径(目录或文件的全路径)　 [本地目录全路径] --username　用户名</span></span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn co <span class=\"string\">svn:</span><span class=\"comment\">//localhost/files          --username taotao</span></span><br><span class=\"line\">svn checkout <span class=\"string\">http:</span><span class=\"comment\">//localhost/files   --username taotao</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>导出(导出一个干净的不带.svn文件夹的目录树)</p>\n <figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn  <span class=\"keyword\">export</span>  [-r 版本号]  http:<span class=\"comment\">//路径(目录或文件的全路径) [本地目录全路径]</span></span><br><span class=\"line\">--username　用户名</span><br><span class=\"line\">svn  <span class=\"keyword\">export</span>  [-r 版本号]  svn:<span class=\"comment\">//路径(目录或文件的全路径) [本地目录全路径] --username　用户名</span></span><br><span class=\"line\">svn  <span class=\"keyword\">export</span>  本地检出的(即带有.svn文件夹的)目录全路径  要导出的本地目录全路径</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"keyword\">export</span> svn:<span class=\"comment\">//localhost/files --username wzhnsc</span></span><br><span class=\"line\">svn <span class=\"keyword\">export</span> svn:<span class=\"comment\">//localhost/files --username wzhnsc</span></span><br><span class=\"line\">svn <span class=\"keyword\">export</span> /<span class=\"built_in\">home</span>/files /<span class=\"built_in\">home</span>/tofiles</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加新文件: add</p>\n <figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"keyword\">add</span><span class=\"bash\">　文件名</span></span><br><span class=\"line\"><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"bash\">例子：</span></span><br><span class=\"line\"><span class=\"bash\">svn add picture.png</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>提交: commit 缩写 ci</p>\n <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">svn</span>　<span class=\"selector-tag\">commit</span>　<span class=\"selector-tag\">-m</span>　“提交备注信息文本“　<span class=\"selector-attr\">[-N]</span>　<span class=\"selector-attr\">[--no-unlock]</span>　文件名</span><br><span class=\"line\"><span class=\"selector-tag\">svn</span>　<span class=\"selector-tag\">ci</span>　<span class=\"selector-tag\">-m</span>　“提交备注信息文本“　    <span class=\"selector-attr\">[-N]</span>　<span class=\"selector-attr\">[--no-unlock]</span>　文件名</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\"><span class=\"selector-tag\">svn</span> <span class=\"selector-tag\">commit</span> <span class=\"selector-tag\">-m</span> “提交我的测试用<span class=\"selector-tag\">test</span><span class=\"selector-class\">.swift</span>“ <span class=\"selector-tag\">test</span><span class=\"selector-class\">.swift</span></span><br><span class=\"line\"><span class=\"selector-tag\">svn</span> <span class=\"selector-tag\">ci</span> <span class=\"selector-tag\">-m</span> “提交我的测试用<span class=\"selector-tag\">test</span><span class=\"selector-class\">.swift</span>“ <span class=\"selector-tag\">test</span><span class=\"selector-class\">.swift</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更新文件: update</p>\n <figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"keyword\">update</span></span><br><span class=\"line\">svn　<span class=\"keyword\">update</span>　-r　修正版本　文件名</span><br><span class=\"line\">svn　<span class=\"keyword\">update</span>　文件名</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"keyword\">update</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">后面没有目录，默认将当前目录以及子目录下的所有文件都更新到最新版本</span><br><span class=\"line\"></span><br><span class=\"line\">svn <span class=\"keyword\">update</span> -r 200 <span class=\"keyword\">test</span>.swift    </span><br><span class=\"line\"></span><br><span class=\"line\">将版本库中的文件 <span class=\"keyword\">test</span>.swift还原到修正版本（revision）200</span><br><span class=\"line\"></span><br><span class=\"line\">svn <span class=\"keyword\">update</span> <span class=\"keyword\">test</span>.swift</span><br><span class=\"line\"></span><br><span class=\"line\">更新与版本库同步。提交的时候提示过期冲突，需要先<span class=\"keyword\">update</span>修改文件，然后清除</span><br><span class=\"line\">svn resolved，最后再提交commit。</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除文件: delete</p>\n <figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"keyword\">delete</span>　svn:<span class=\"regexp\">//</span>路径(目录或文件的全路径) -m “删除备注信息文本”</span><br><span class=\"line\">svn　<span class=\"keyword\">delete</span>　文件名 </span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"keyword\">delete</span> svn:<span class=\"regexp\">//</span>localhost<span class=\"regexp\">/testapp/</span>test.swift -m “删除测试文件test.swift”</span><br><span class=\"line\"></span><br><span class=\"line\">推荐如下操作：</span><br><span class=\"line\">svn <span class=\"keyword\">delete</span> test.swift</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>加锁: lock</p>\n <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"keyword\">lock</span>　-m　“加锁备注信息文本“　[<span class=\"comment\">--force]　文件名 </span></span><br><span class=\"line\">svn　<span class=\"keyword\">unlock</span>　文件名</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"keyword\">lock</span> -m “锁信测试用test.swift文件“ test.swift </span><br><span class=\"line\">svn <span class=\"keyword\">unlock</span> test.swift</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>比较差异: diff</p>\n <figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"keyword\">diff　</span>     文件名 </span><br><span class=\"line\">svn　<span class=\"keyword\">diff　</span>-r　 修正版本号m:修正版本号n　文件名</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"keyword\">diff </span>test.<span class=\"keyword\">swift </span>              </span><br><span class=\"line\"></span><br><span class=\"line\">将修改的文件与基础版本比较</span><br><span class=\"line\"></span><br><span class=\"line\">svn <span class=\"keyword\">diff </span>-r <span class=\"number\">200</span>:<span class=\"number\">201</span> test.<span class=\"keyword\">swift </span>  </span><br><span class=\"line\"></span><br><span class=\"line\">对修正版本号<span class=\"number\">200</span>和修正版本号<span class=\"number\">201</span>比较差异</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看文件或者目录状态: status  缩写 st</p>\n <figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn st 目录路径/名</span><br><span class=\"line\"></span><br><span class=\"line\">目录下的文件和子目录的状态，正常状态不显示 ?：不在svn的控制中M：内容被修改；<span class=\"keyword\">C</span>：发生冲突A：预定加入到版本库 <span class=\"keyword\">K</span>：被锁定 </span><br><span class=\"line\"></span><br><span class=\"line\">svn  -v 目录路径/名</span><br><span class=\"line\"></span><br><span class=\"line\">svn status -v 目录路径/名</span><br><span class=\"line\"></span><br><span class=\"line\">显示文件和子目录状态,第一列保持相同，第二列显示工作版本号，第三和第四列显示最后一次修改的版本号和修改人</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看日志: log</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"keyword\">log</span>　文件名</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"keyword\">log</span> <span class=\"keyword\">test</span>.swift    </span><br><span class=\"line\"></span><br><span class=\"line\">显示这个文件的所有修改记录，及其版本号的变化</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看文件详细信息: info</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"builtin-name\">info</span>　文件名</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"builtin-name\">info</span> test.swift</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看版本库下的文件和目录列表: list 缩写 ls</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　list　<span class=\"string\">svn:</span><span class=\"comment\">//路径(目录或文件的全路径)</span></span><br><span class=\"line\">svn　ls　<span class=\"string\">svn:</span><span class=\"comment\">//路径(目录或文件的全路径)</span></span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn list <span class=\"string\">svn:</span><span class=\"comment\">//localhost/test</span></span><br><span class=\"line\">svn ls <span class=\"string\">svn:</span><span class=\"comment\">//localhost/test   </span></span><br><span class=\"line\"></span><br><span class=\"line\">显示<span class=\"string\">svn:</span><span class=\"comment\">//localhost/test目录下的所有属于版本库的文件和目录</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>恢复本地修改: revert</p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">svn</span>　<span class=\"keyword\">revert　</span>[--recursive]　文件名</span><br><span class=\"line\"></span><br><span class=\"line\">注意: 本子命令不会存取网络，并且会解除冲突的状况。但是它不会恢复被删除的目录。</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\"><span class=\"symbol\">svn</span> <span class=\"keyword\">revert </span>taotao.<span class=\"keyword\">swift </span>     </span><br><span class=\"line\"></span><br><span class=\"line\">丢弃对一个文件的修改</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">svn</span> <span class=\"keyword\">revert </span>--recursive .     </span><br><span class=\"line\"></span><br><span class=\"line\">恢复一整个目录的文件，. 为当前目录</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>把工作拷贝更新到别的URL: switch</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　<span class=\"keyword\">switch</span>　<span class=\"string\">http:</span><span class=\"comment\">//目录全路径　  </span></span><br><span class=\"line\"></span><br><span class=\"line\">本地目录全路径</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">svn <span class=\"keyword\">switch</span> <span class=\"string\">http:</span><span class=\"comment\">//localhost/test/456 .  </span></span><br><span class=\"line\"></span><br><span class=\"line\">(原为<span class=\"number\">123</span>的分支)当前所在目录分支到</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>新建分支: copy</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn <span class=\"keyword\">copy</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"bash\">例子：</span></span><br><span class=\"line\"><span class=\"bash\">svn copy branchA branchB  -m <span class=\"string\">\"make B branch\"</span>    从branchA拷贝出一个新分支branchB</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>合并分支: merge</p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\"><span class=\"symbol\">svn</span> merge <span class=\"keyword\">branchA </span><span class=\"keyword\">branchB </span> </span><br><span class=\"line\"></span><br><span class=\"line\">把对<span class=\"keyword\">branchA的修改合并到分支branchB</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解决冲突：resolved</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">svn　resolved　[本地目录全路径]</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">$ svn update</span><br><span class=\"line\">C foo.c</span><br><span class=\"line\">Updated to revision <span class=\"number\">31</span>.</span><br><span class=\"line\">如果你在更新时得到冲突，你的工作拷贝会产生三个新的文件：</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls</span><br><span class=\"line\">foo.c</span><br><span class=\"line\">foo<span class=\"selector-class\">.c</span><span class=\"selector-class\">.mine</span></span><br><span class=\"line\">foo<span class=\"selector-class\">.c</span><span class=\"selector-class\">.r30</span></span><br><span class=\"line\">foo<span class=\"selector-class\">.c</span><span class=\"selector-class\">.r31</span></span><br><span class=\"line\">当你解决了foo.c的冲突，并且准备提交，</span><br><span class=\"line\">运行svn resolved让你的工作拷贝知道你已经完成了所有事情。</span><br><span class=\"line\">你可以仅仅删除冲突的文件并且提交，</span><br><span class=\"line\">但是svn resolved除了删除冲突文件，还修正了一些记录在工作拷贝管理区域的记录数据。</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"title":"Xcode-常用调试技巧","date":"2018-02-01T07:06:17.000Z","_content":"1. 普通断点调试\n   断点(Breakpoint)调试顾名思义，是当程序运行到断点处时会暂停运行。然后可以查看具体参数的值或者属性状态等。具体操作是点击代码左侧开启断点，再点一次将关闭断点，但断点还在。\n   快捷键为：command+\\。如图：\n   ![](iOS-调试技巧/breakpoint1.png)\n2. 条件断点调试\n   可以对普通断点的属性进行配置，设置条件，使调试更加方便达到目的。如下循环中：\n    ```\n  for i in 0..<10 {\n      print(i)\n  }\n    ```\n   如果要调试循环中的代码，每次都要单步执行，可能这并不是我想要的。我想要在一定条件的时候中断程序进行调试，可以如图添加Condition：\n   ![](iOS-调试技巧/breakpoint4.png)\n   可以设置Ignore参数，会忽略前面n次的断点，会在第n+1次中断：\n   ![](iOS-调试技巧/breakpoint5.png)\n   可以查看某个函数被调用的次数，设置Action参数,要选中\n   Automatically continue after evaluating actions。\n   ![](iOS-调试技巧/breakpoint6.png)\n3. 异常断点调试\n   有时候由于异常导致后程序crash了，代码就直接断到main函数中去了，这时候调试就比较麻烦。这种情况就可以用异常断点调试方法进行调试。如图添加异常断点：\n   ![](iOS-调试技巧/breakpoint7.png)\n4. 符号断点Symbolic Breakpoint调试\n   符号断点的创建也和异常断点一样。一般符号断点可以在你指定的[类名 方法名]时中断执行。\n   ![](iOS-调试技巧/breakpoint8.png)\n   如果Symbol只写了一个函数名，那么就会在出现该函数名的地方中断执行。\n   ![](iOS-调试技巧/breakpoint9.png)\n5. Analyze分析器\n   Analyze分析器是一种静态的工具，可以对我们的程序进行分析，找出我们未使用的变量，或一些死存储。执行Analyze如下：Product-->Analyze。快捷键为: Command+Ctrl+B\n   可以设置在编译程序的时候同时Analyze，把下列选项设为Yes即可。\n   ![](iOS-调试技巧/breakpoint16.png)\n6. 僵尸对象\n   iOS中把那些已经release但还没完全消失的对象叫做僵尸对象，对已经release的对象再次释放，就会发生异常。虽然自从使用ARC后，由于对象释放产生的异常已经大大变少，但偶尔还会出现。开启僵尸对象模式后，就能快速定位到异常位置。\n   开启方式如下：Product-->Scheme-->Edit Scheme. 勾选Zombie Objects即可。\n   ![](iOS-调试技巧/breakpoint11.png)\n7. lldb命令调试\n   (1) print、po输出打印：\n   打印变量的值可以使用print（简写p）命令，该命令如果打印的是基础数据类型，则会列出基础数据类型的类型和值。如果是对象，还会打印出对象指针地址。print的打印信息较多，如果只想查看对象的值，则可以使用po（printobject）命令。\n   ![](iOS-调试技巧/breakpoint12.png)\n   (2) call:\n   call调用方法的意思，call可以使用在没有返回值，不需要显示输出的情况下。比如可以这样用：\n   ```  \n  call self.view.backgroundColor = UIColor.purple\n   ```\n   这样就不用为了看改一下颜色的效果再进行build一次了，尤其是build一次还要经过漫长的等待。\n  \n   (3) expression表达式(expr):\n   expr常用于调试时修改变量的值。比如：\n   ![](iOS-调试技巧/breakpoint13.png)\n   (4) image:\n   image lookup --address寻址。比如：\n   ```\n   (lldb) image lookup --address 0x00000001097c396f\n   ```\n   image lookup --type查看类型.比如：\n   ```\n  (lldb) image lookup --type UIButton\n   ```\n   可以列出UIButton所有的属性。\n\n   (5) bt:\n   我们可以用bt来打印调用堆栈，加all可打印多个thread的堆栈，如下：\n   ![](iOS-调试技巧/breakpoint14.png)\n8. 视图调试\n   当在调看UI布局或者在布局产生冲突的时候可以使用视图调试解决问题。进入APP出现问题的那个界面然后点击Xcode Debug View Hierarchy, 如图：\n   ![](iOS-调试技巧/breakpoint15.png)\n9. Log调试\n   可以使用别人的Log工具或者自定义Log，按照需求自行选择。","source":"_posts/iOS-调试技巧.md","raw":"---\ntitle: Xcode-常用调试技巧\ndate: 2018-02-01 15:06:17\ntags:\n---\n1. 普通断点调试\n   断点(Breakpoint)调试顾名思义，是当程序运行到断点处时会暂停运行。然后可以查看具体参数的值或者属性状态等。具体操作是点击代码左侧开启断点，再点一次将关闭断点，但断点还在。\n   快捷键为：command+\\。如图：\n   ![](iOS-调试技巧/breakpoint1.png)\n2. 条件断点调试\n   可以对普通断点的属性进行配置，设置条件，使调试更加方便达到目的。如下循环中：\n    ```\n  for i in 0..<10 {\n      print(i)\n  }\n    ```\n   如果要调试循环中的代码，每次都要单步执行，可能这并不是我想要的。我想要在一定条件的时候中断程序进行调试，可以如图添加Condition：\n   ![](iOS-调试技巧/breakpoint4.png)\n   可以设置Ignore参数，会忽略前面n次的断点，会在第n+1次中断：\n   ![](iOS-调试技巧/breakpoint5.png)\n   可以查看某个函数被调用的次数，设置Action参数,要选中\n   Automatically continue after evaluating actions。\n   ![](iOS-调试技巧/breakpoint6.png)\n3. 异常断点调试\n   有时候由于异常导致后程序crash了，代码就直接断到main函数中去了，这时候调试就比较麻烦。这种情况就可以用异常断点调试方法进行调试。如图添加异常断点：\n   ![](iOS-调试技巧/breakpoint7.png)\n4. 符号断点Symbolic Breakpoint调试\n   符号断点的创建也和异常断点一样。一般符号断点可以在你指定的[类名 方法名]时中断执行。\n   ![](iOS-调试技巧/breakpoint8.png)\n   如果Symbol只写了一个函数名，那么就会在出现该函数名的地方中断执行。\n   ![](iOS-调试技巧/breakpoint9.png)\n5. Analyze分析器\n   Analyze分析器是一种静态的工具，可以对我们的程序进行分析，找出我们未使用的变量，或一些死存储。执行Analyze如下：Product-->Analyze。快捷键为: Command+Ctrl+B\n   可以设置在编译程序的时候同时Analyze，把下列选项设为Yes即可。\n   ![](iOS-调试技巧/breakpoint16.png)\n6. 僵尸对象\n   iOS中把那些已经release但还没完全消失的对象叫做僵尸对象，对已经release的对象再次释放，就会发生异常。虽然自从使用ARC后，由于对象释放产生的异常已经大大变少，但偶尔还会出现。开启僵尸对象模式后，就能快速定位到异常位置。\n   开启方式如下：Product-->Scheme-->Edit Scheme. 勾选Zombie Objects即可。\n   ![](iOS-调试技巧/breakpoint11.png)\n7. lldb命令调试\n   (1) print、po输出打印：\n   打印变量的值可以使用print（简写p）命令，该命令如果打印的是基础数据类型，则会列出基础数据类型的类型和值。如果是对象，还会打印出对象指针地址。print的打印信息较多，如果只想查看对象的值，则可以使用po（printobject）命令。\n   ![](iOS-调试技巧/breakpoint12.png)\n   (2) call:\n   call调用方法的意思，call可以使用在没有返回值，不需要显示输出的情况下。比如可以这样用：\n   ```  \n  call self.view.backgroundColor = UIColor.purple\n   ```\n   这样就不用为了看改一下颜色的效果再进行build一次了，尤其是build一次还要经过漫长的等待。\n  \n   (3) expression表达式(expr):\n   expr常用于调试时修改变量的值。比如：\n   ![](iOS-调试技巧/breakpoint13.png)\n   (4) image:\n   image lookup --address寻址。比如：\n   ```\n   (lldb) image lookup --address 0x00000001097c396f\n   ```\n   image lookup --type查看类型.比如：\n   ```\n  (lldb) image lookup --type UIButton\n   ```\n   可以列出UIButton所有的属性。\n\n   (5) bt:\n   我们可以用bt来打印调用堆栈，加all可打印多个thread的堆栈，如下：\n   ![](iOS-调试技巧/breakpoint14.png)\n8. 视图调试\n   当在调看UI布局或者在布局产生冲突的时候可以使用视图调试解决问题。进入APP出现问题的那个界面然后点击Xcode Debug View Hierarchy, 如图：\n   ![](iOS-调试技巧/breakpoint15.png)\n9. Log调试\n   可以使用别人的Log工具或者自定义Log，按照需求自行选择。","slug":"iOS-调试技巧","published":1,"updated":"2018-02-02T02:11:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd5szu4j0004mcl0qbl438kf","content":"<ol>\n<li>普通断点调试<br>断点(Breakpoint)调试顾名思义，是当程序运行到断点处时会暂停运行。然后可以查看具体参数的值或者属性状态等。具体操作是点击代码左侧开启断点，再点一次将关闭断点，但断点还在。<br>快捷键为：command+\\。如图：<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint1.png\" alt=\"\"></li>\n<li><p>条件断点调试<br>可以对普通断点的属性进行配置，设置条件，使调试更加方便达到目的。如下循环中：</p>\n <figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> 0<span class=\"built_in\">..</span>&lt;10 &#123;</span><br><span class=\"line\">    <span class=\"builtin-name\">print</span>(i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果要调试循环中的代码，每次都要单步执行，可能这并不是我想要的。我想要在一定条件的时候中断程序进行调试，可以如图添加Condition：<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint4.png\" alt=\"\"><br>可以设置Ignore参数，会忽略前面n次的断点，会在第n+1次中断：<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint5.png\" alt=\"\"><br>可以查看某个函数被调用的次数，设置Action参数,要选中<br>Automatically continue after evaluating actions。<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint6.png\" alt=\"\"></p>\n</li>\n<li>异常断点调试<br>有时候由于异常导致后程序crash了，代码就直接断到main函数中去了，这时候调试就比较麻烦。这种情况就可以用异常断点调试方法进行调试。如图添加异常断点：<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint7.png\" alt=\"\"></li>\n<li>符号断点Symbolic Breakpoint调试<br>符号断点的创建也和异常断点一样。一般符号断点可以在你指定的[类名 方法名]时中断执行。<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint8.png\" alt=\"\"><br>如果Symbol只写了一个函数名，那么就会在出现该函数名的地方中断执行。<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint9.png\" alt=\"\"></li>\n<li>Analyze分析器<br>Analyze分析器是一种静态的工具，可以对我们的程序进行分析，找出我们未使用的变量，或一些死存储。执行Analyze如下：Product–&gt;Analyze。快捷键为: Command+Ctrl+B<br>可以设置在编译程序的时候同时Analyze，把下列选项设为Yes即可。<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint16.png\" alt=\"\"></li>\n<li>僵尸对象<br>iOS中把那些已经release但还没完全消失的对象叫做僵尸对象，对已经release的对象再次释放，就会发生异常。虽然自从使用ARC后，由于对象释放产生的异常已经大大变少，但偶尔还会出现。开启僵尸对象模式后，就能快速定位到异常位置。<br>开启方式如下：Product–&gt;Scheme–&gt;Edit Scheme. 勾选Zombie Objects即可。<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint11.png\" alt=\"\"></li>\n<li><p>lldb命令调试<br>(1) print、po输出打印：<br>打印变量的值可以使用print（简写p）命令，该命令如果打印的是基础数据类型，则会列出基础数据类型的类型和值。如果是对象，还会打印出对象指针地址。print的打印信息较多，如果只想查看对象的值，则可以使用po（printobject）命令。<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint12.png\" alt=\"\"><br>(2) call:<br>call调用方法的意思，call可以使用在没有返回值，不需要显示输出的情况下。比如可以这样用：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">call self<span class=\"selector-class\">.view</span><span class=\"selector-class\">.backgroundColor</span> = UIColor.purple</span><br></pre></td></tr></table></figure>\n<p>这样就不用为了看改一下颜色的效果再进行build一次了，尤其是build一次还要经过漫长的等待。</p>\n<p>(3) expression表达式(expr):<br>expr常用于调试时修改变量的值。比如：<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint13.png\" alt=\"\"><br>(4) image:<br>image lookup –address寻址。比如：</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(lldb) image <span class=\"built_in\">lookup</span> --<span class=\"built_in\">address</span> <span class=\"number\">0</span>x00000001097c396f</span><br></pre></td></tr></table></figure>\n<p>image lookup –type查看类型.比如：</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(lldb) image <span class=\"built_in\">lookup</span> --<span class=\"built_in\">type</span> UIButton</span><br></pre></td></tr></table></figure>\n<p>可以列出UIButton所有的属性。</p>\n<p>(5) bt:<br>我们可以用bt来打印调用堆栈，加all可打印多个thread的堆栈，如下：<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint14.png\" alt=\"\"></p>\n</li>\n<li>视图调试<br>当在调看UI布局或者在布局产生冲突的时候可以使用视图调试解决问题。进入APP出现问题的那个界面然后点击Xcode Debug View Hierarchy, 如图：<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint15.png\" alt=\"\"></li>\n<li>Log调试<br>可以使用别人的Log工具或者自定义Log，按照需求自行选择。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>普通断点调试<br>断点(Breakpoint)调试顾名思义，是当程序运行到断点处时会暂停运行。然后可以查看具体参数的值或者属性状态等。具体操作是点击代码左侧开启断点，再点一次将关闭断点，但断点还在。<br>快捷键为：command+\\。如图：<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint1.png\" alt=\"\"></li>\n<li><p>条件断点调试<br>可以对普通断点的属性进行配置，设置条件，使调试更加方便达到目的。如下循环中：</p>\n <figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> 0<span class=\"built_in\">..</span>&lt;10 &#123;</span><br><span class=\"line\">    <span class=\"builtin-name\">print</span>(i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果要调试循环中的代码，每次都要单步执行，可能这并不是我想要的。我想要在一定条件的时候中断程序进行调试，可以如图添加Condition：<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint4.png\" alt=\"\"><br>可以设置Ignore参数，会忽略前面n次的断点，会在第n+1次中断：<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint5.png\" alt=\"\"><br>可以查看某个函数被调用的次数，设置Action参数,要选中<br>Automatically continue after evaluating actions。<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint6.png\" alt=\"\"></p>\n</li>\n<li>异常断点调试<br>有时候由于异常导致后程序crash了，代码就直接断到main函数中去了，这时候调试就比较麻烦。这种情况就可以用异常断点调试方法进行调试。如图添加异常断点：<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint7.png\" alt=\"\"></li>\n<li>符号断点Symbolic Breakpoint调试<br>符号断点的创建也和异常断点一样。一般符号断点可以在你指定的[类名 方法名]时中断执行。<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint8.png\" alt=\"\"><br>如果Symbol只写了一个函数名，那么就会在出现该函数名的地方中断执行。<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint9.png\" alt=\"\"></li>\n<li>Analyze分析器<br>Analyze分析器是一种静态的工具，可以对我们的程序进行分析，找出我们未使用的变量，或一些死存储。执行Analyze如下：Product–&gt;Analyze。快捷键为: Command+Ctrl+B<br>可以设置在编译程序的时候同时Analyze，把下列选项设为Yes即可。<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint16.png\" alt=\"\"></li>\n<li>僵尸对象<br>iOS中把那些已经release但还没完全消失的对象叫做僵尸对象，对已经release的对象再次释放，就会发生异常。虽然自从使用ARC后，由于对象释放产生的异常已经大大变少，但偶尔还会出现。开启僵尸对象模式后，就能快速定位到异常位置。<br>开启方式如下：Product–&gt;Scheme–&gt;Edit Scheme. 勾选Zombie Objects即可。<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint11.png\" alt=\"\"></li>\n<li><p>lldb命令调试<br>(1) print、po输出打印：<br>打印变量的值可以使用print（简写p）命令，该命令如果打印的是基础数据类型，则会列出基础数据类型的类型和值。如果是对象，还会打印出对象指针地址。print的打印信息较多，如果只想查看对象的值，则可以使用po（printobject）命令。<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint12.png\" alt=\"\"><br>(2) call:<br>call调用方法的意思，call可以使用在没有返回值，不需要显示输出的情况下。比如可以这样用：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">call self<span class=\"selector-class\">.view</span><span class=\"selector-class\">.backgroundColor</span> = UIColor.purple</span><br></pre></td></tr></table></figure>\n<p>这样就不用为了看改一下颜色的效果再进行build一次了，尤其是build一次还要经过漫长的等待。</p>\n<p>(3) expression表达式(expr):<br>expr常用于调试时修改变量的值。比如：<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint13.png\" alt=\"\"><br>(4) image:<br>image lookup –address寻址。比如：</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(lldb) image <span class=\"built_in\">lookup</span> --<span class=\"built_in\">address</span> <span class=\"number\">0</span>x00000001097c396f</span><br></pre></td></tr></table></figure>\n<p>image lookup –type查看类型.比如：</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(lldb) image <span class=\"built_in\">lookup</span> --<span class=\"built_in\">type</span> UIButton</span><br></pre></td></tr></table></figure>\n<p>可以列出UIButton所有的属性。</p>\n<p>(5) bt:<br>我们可以用bt来打印调用堆栈，加all可打印多个thread的堆栈，如下：<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint14.png\" alt=\"\"></p>\n</li>\n<li>视图调试<br>当在调看UI布局或者在布局产生冲突的时候可以使用视图调试解决问题。进入APP出现问题的那个界面然后点击Xcode Debug View Hierarchy, 如图：<br><img src=\"/2018/02/01/iOS-调试技巧/breakpoint15.png\" alt=\"\"></li>\n<li>Log调试<br>可以使用别人的Log工具或者自定义Log，按照需求自行选择。</li>\n</ol>\n"}],"PostAsset":[{"_id":"source/_posts/iOS-调试技巧/breakpoint1.png","slug":"breakpoint1.png","post":"cjd5szu4j0004mcl0qbl438kf","modified":0,"renderable":0},{"_id":"source/_posts/iOS-调试技巧/breakpoint11.png","slug":"breakpoint11.png","post":"cjd5szu4j0004mcl0qbl438kf","modified":0,"renderable":0},{"_id":"source/_posts/iOS-调试技巧/breakpoint12.png","slug":"breakpoint12.png","post":"cjd5szu4j0004mcl0qbl438kf","modified":0,"renderable":0},{"_id":"source/_posts/iOS-调试技巧/breakpoint13.png","slug":"breakpoint13.png","post":"cjd5szu4j0004mcl0qbl438kf","modified":0,"renderable":0},{"_id":"source/_posts/iOS-调试技巧/breakpoint14.png","slug":"breakpoint14.png","post":"cjd5szu4j0004mcl0qbl438kf","modified":0,"renderable":0},{"_id":"source/_posts/iOS-调试技巧/breakpoint15.png","slug":"breakpoint15.png","post":"cjd5szu4j0004mcl0qbl438kf","modified":0,"renderable":0},{"_id":"source/_posts/iOS-调试技巧/breakpoint16.png","slug":"breakpoint16.png","post":"cjd5szu4j0004mcl0qbl438kf","modified":0,"renderable":0},{"_id":"source/_posts/iOS-调试技巧/breakpoint4.png","slug":"breakpoint4.png","post":"cjd5szu4j0004mcl0qbl438kf","modified":0,"renderable":0},{"_id":"source/_posts/iOS-调试技巧/breakpoint5.png","slug":"breakpoint5.png","post":"cjd5szu4j0004mcl0qbl438kf","modified":0,"renderable":0},{"_id":"source/_posts/iOS-调试技巧/breakpoint6.png","slug":"breakpoint6.png","post":"cjd5szu4j0004mcl0qbl438kf","modified":0,"renderable":0},{"_id":"source/_posts/iOS-调试技巧/breakpoint7.png","slug":"breakpoint7.png","post":"cjd5szu4j0004mcl0qbl438kf","modified":0,"renderable":0},{"_id":"source/_posts/iOS-调试技巧/breakpoint8.png","slug":"breakpoint8.png","post":"cjd5szu4j0004mcl0qbl438kf","modified":0,"renderable":0},{"_id":"source/_posts/iOS-调试技巧/breakpoint9.png","slug":"breakpoint9.png","post":"cjd5szu4j0004mcl0qbl438kf","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[],"Tag":[]}}